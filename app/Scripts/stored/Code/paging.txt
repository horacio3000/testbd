////PAGING///////////////////
  paging**flagName**Label = '';
  mTempo**flagName**sFiltered: ##listType##[] = [];
  **flagName**FlagMax: boolean;
  curent**flagName**Paging = 1;
  **flagName**: ##listType##[] = [];
  search**flagName**String = '';
  pagingCountingBy = 8;


  ////PAGING/////////////////////////

  //function on init()
  Search**flagName**s(): void {
    this.curent**flagName**Paging = 1;
    this.Search**flagName**Internal();
    this.Filter**flagName**sByPaging();
  }


  Search**flagName**Internal(): void {
    if (this.search**flagName**String.trim().toLowerCase() === '') {
      this.mTempo**flagName**sFiltered = this.@@ORIGLIST@@;
      return;
    }

    this.mTempo**flagName**sFiltered = this.@@ORIGLIST@@.filter(x => x.strTitle.toLowerCase().
    indexOf(this.Search**flagName**Internal.toLowerCase()) !== -1);
  }


  Filter**flagName**sByPaging(): void {
    // tslint:disable-next-line: array-type
    const min: number =  (this.curent**flagName**Paging * this.pagingCountingBy) - this.pagingCountingBy;
    const max: number = (this.curent**flagName**Paging * this.pagingCountingBy);

    let iMax = 0;
    // tslint:disable-next-line: prefer-for-of
    for (let i = 0; i < this.mTempo**flagName**sFiltered.length; i++) {
      if (i >= min && i < max) {
        this.mTempo**flagName**sFiltered[i].bActive = true;
        iMax = i + 1;
      }
      else {
        this.mTempo**flagName**sFiltered[i].bActive = false;
      }
    }


    if (this.mTempo**flagName**sFiltered.length === iMax) {
      this.**flagName**FlagMax = true;
    } else {
      this.**flagName**FlagMax = false;
    }


    this.paging**flagName**Label = this.mTempo**flagName**sFiltered.length + ' / ' + (min + 1).toString() + '-' + (iMax).toString();
    this.mTempo**flagName**sFiltered = this.mTempo**flagName**sFiltered.filter(x => x.bActive === true);

  }

  Filter**flagName**sByPagingUI(bSum: boolean): void {
    this.Search**flagName**Internal();
    this.SetCurrentPaging**flagName**s(bSum);
    this.Filter**flagName**sByPaging();
  }

  SetCurrentPaging**flagName**s(bSum: boolean): void {
    if (bSum) {
      this.curent**flagName**Paging++;
    }

    if (bSum === false) {
      this.curent**flagName**Paging--;
    }

    if (this.curent**flagName**Paging < 1) {
      this.curent**flagName**Paging = 1;
    }




    if ((this.curent**flagName**Paging * this.pagingCountingBy) > this.mTempo**flagName**sFiltered.length) {
      this.curent**flagName**Paging = Math.ceil(this.mTempo**flagName**sFiltered.length / this.pagingCountingBy);
    }
  }


/////////////////////////////////////


            <!------------------QUETA PAGING------------->
            <div style="width: 100%;padding: 0px;text-align: center;display: block;">
              <div class="mTableMiddle" style="width: 100%;">
                <div>
                  <div style="width: 220px;text-align: right;">
                    <mat-form-field appearance="fill" style="width: 100%">
                      <mat-label class="outcontitle">חפש בדיקות</mat-label>
                      <input (keyup)="&&&UiThisName&&&.Search**flagName**s()" matInput
                        [(ngModel)]="&&&UiThisName&&&.search**flagName**String">
                    </mat-form-field>


                  </div>

                  <div style="width: 30px;"></div>

                  <div style="cursor:pointer;width: 30px;" (click)="&&&UiThisName&&&.Filter**flagName**sByPagingUI(true)">
                    <div>
                      <div [hidden]="&&&UiThisName&&&.**flagName**FlagMax == true">
                        <div
                          style="width: 30px;display:block;height:30px;right:30px;background-image: url('../../../assets/img/leftorange.png');background-repeat: no-repeat;">
                        </div>
                      </div>
                    </div>
                  </div>



                  <div style="width: 90px;text-align: center;"><input
                      (keyup)="&&&UiThisName&&&.Filter**flagName**sByPagingUI(null)" type="number"
                      [(ngModel)]="&&&UiThisName&&&.curent**flagName**Paging"    class="outcontitle"
                      style="font-weight: bold;font-size: 13pt;text-align:center;width: 80px;height:28px;border:solid 1px #f0d6be">
                  </div>




                  <div style="cursor:pointer;width: 30px;" (click)="&&&UiThisName&&&.Filter**flagName**sByPagingUI(false)">
                    <div>
                      <div [hidden]="&&&UiThisName&&&.curent**flagName**Paging == 1">
                        <div
                          style="width: 30px;display:block;height:30px;right:30px;background-image: url('../../../assets/img/rightorange.png');background-repeat: no-repeat;">
                        </div>
                      </div>
                    </div>
                  </div>



 <div style="width: 20px"></div>
                  <div style="width: auto;text-align: right;">
                    <span class="outlab1"
                      style="font-weight: bold;font-size: 13pt">{{&&&UiThisName&&&.paging**flagName**Label}}</span>
                  </div>

                </div>
              </div>
            </div>

            <!------------------QUETA PAGING------------->

